/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Menu;

import formMenu.formBarang;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import koneksi.koneksiDB;
import java.time.LocalDate;
import java.time.LocalTime;
import java.sql.Date;
import java.sql.Time;
import java.util.Random;
import javax.swing.UIManager;
import koneksi.SessionManager;
import koneksi.sessionRole;
/**
 *
 * @author user
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
     private Timer timer;
     private final Connection conn;
    public login() {
        initComponents();
        conn = koneksiDB.BukaKoneksi();
        
        txtRFID.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        restartTimer();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        
    }

    private void restartTimer() {
        if (timer != null && timer.isRunning()) {
            timer.restart(); // Reset timer jika masih berjalan
        } else {
            timer = new Timer(300, new ActionListener() { // Tunggu 300ms
                @Override
                public void actionPerformed(ActionEvent evt) {
                    processRFID();
                }
      
            });
            timer.setRepeats(false);
            timer.start();
        }
    }

    private void processRFID() {
        String rfid = txtRFID.getText().trim();
        if (!rfid.isEmpty()) {
            loginWithRFID(rfid);
            txtRFID.setText(""); // Kosongkan setelah login
        }
    }
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnLoginManual = new javax.swing.JLabel();
        bgUtama = new javax.swing.JLabel();
        txtRFID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnLoginManual.setText("Login menggunkan username dan passoword");
        btnLoginManual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginManualMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(btnLoginManual)
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnLoginManual)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 570, 280, 50));

        bgUtama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/login #1 ref id.png"))); // NOI18N
        jPanel1.add(bgUtama, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txtRFID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRFIDActionPerformed(evt);
            }
        });
        jPanel1.add(txtRFID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 130, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginManualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginManualMouseClicked
        formLoginManual loginManual = new formLoginManual();
                        loginManual.setVisible(true);
                        dispose();
    }//GEN-LAST:event_btnLoginManualMouseClicked

    private void txtRFIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRFIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRFIDActionPerformed
    private void loginWithRFID(String rfid_uid) {
        if (rfid_uid.isEmpty()) return;
        
        String sql = "SELECT * FROM pengguna WHERE kode_rfid = ?";
        
        try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, rfid_uid);
            ResultSet rs = st.executeQuery();
            
            if (rs.next()) {
                String idUser = rs.getString("id_user");
                String role = rs.getString("role");
                String nama = rs.getString("nama");
                
                 SessionManager.setNamaPengguna(nama);
                 sessionRole.setRolePengguna(role);
                 SessionManager.setIdUser(idUser);
                JOptionPane.showMessageDialog(this, "Login berhasil sebagai " + role);
                if ("owner".equals(role)) {
                    new menuOwner().setVisible(true);
                    dispose();
                } else if ("kasir".equals(role)) {
                    LocalTime waktuReal = LocalTime.now();
                    String status = tentukanStatusPresensi(waktuReal);
                    if (status.equals("masuk")) {
                        if (!mengecekPresensi(idUser, "masuk")) {
                            simpanPresensi(idUser, status);
                            JOptionPane.showMessageDialog(this, "presensi masuk berhasil");
                            
                        }
                    }else if(status.equals("pulang")){
                        if (!mengecekPresensi(idUser, "pulang")) {
                            simpanPresensi(idUser, status);
                            JOptionPane.showMessageDialog(this, "presensi pulang berhasil");
                        }
                    }
                    new menuKasir().setVisible(true);
                    dispose();
                }
                
                
            } else {
                JOptionPane.showMessageDialog(this, "RFID tidak terdaftar!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            
        }
    }
    private String tentukanStatusPresensi(LocalTime waktuReal) {
        LocalTime waktuSekarang = LocalTime.now();
        System.out.println("Waktu Sekarang: " + waktuSekarang);
        
        if (waktuSekarang.isBefore(LocalTime.of(9, 0))) {
               return "masuk"; // Hadir tepat waktu (antara 08:00 - 08:59)
           } else if (waktuSekarang.isBefore(LocalTime.of(15, 0))) {
               return "masuk"; // Terlambat (antara 09:00 - 14:59)
           } else {
               return "pulang"; 
           }
    }
    
     private void simpanPresensi(String id_user, String status) {
        String idAbsensi = "AB-" + String.format("%05d", new Random().nextInt(99999));

        String sql = "INSERT INTO absensi (id_user, status, waktu_absen, tanggal,id_absensi) VALUES (?, ?, ?, ?,?)";

        try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, id_user);
            st.setString(2, status);
            st.setTime(3, Time.valueOf(LocalTime.now())); // Waktu sekarang
            st.setDate(4, Date.valueOf(LocalDate.now())); // Tanggal sekarang
            st.setString(5, idAbsensi);
            st.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal menyimpan presensi!\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
    
    }
      private boolean mengecekPresensi(String idUser, String status){
          String sql ="SELECT COUNT(*) FROM absensi WHERE id_user = ? AND status = ? AND tanggal = CURDATE()";
          try (PreparedStatement st = conn.prepareStatement(sql)){
              st.setString(1, idUser);
              st.setString(2, status);
              ResultSet rs = st.executeQuery();
              if(rs.next()){
                  return rs.getInt(1)>0;
              }
          } catch (Exception e) {
              e.printStackTrace();
          }
          return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         try {
    UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatLightLaf());
    } catch (Exception ex) {
        ex.printStackTrace();
    }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgUtama;
    private javax.swing.JLabel btnLoginManual;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtRFID;
    // End of variables declaration//GEN-END:variables
}
