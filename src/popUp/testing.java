/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package popUp;

import com.toedter.calendar.JDateChooser;
import inventoryPupuk.Pupuk;
import inventoryPupuk.PupukDAO;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JTable;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import koneksi.koneksiDB;


/**
 *
 * @author user
 */
public class testing extends javax.swing.JFrame {

    /**
     * Creates new form testing
     */
    private Connection conn;
    public testing() {
        conn = koneksiDB.BukaKoneksi();
        initComponents();
        setTableModel();

        loadData();
        
        btnEdit.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent evt) {
        int selectedRow = tblBarang.getSelectedRow();
        if (selectedRow != -1) {
            // Ambil data dari baris yang dipilih
            String username = tblBarang.getValueAt(selectedRow, 0).toString();
            String password = tblBarang.getValueAt(selectedRow, 1).toString();
            String role = tblBarang.getValueAt(selectedRow, 2).toString();
            String barcode = tblBarang.getValueAt(selectedRow, 3).toString();
            String nama = tblBarang.getValueAt(selectedRow, 4).toString();

            // Panggil dialog edit
            showEditDialog(username, password, role, barcode, nama);
            loadData();
        } else {
            JOptionPane.showMessageDialog(null, "Pilih baris terlebih dahulu.");
        }
    }

            
 
    });
         btnHapus.addActionListener(new ActionListener() {
    public void actionPerformed(ActionEvent evt) {
        int selectedRow = tblBarang.getSelectedRow();
        if (selectedRow != -1) {
            // Ambil data dari baris yang dipilih
            String username = tblBarang.getValueAt(selectedRow, 0).toString();
            
            // Panggil dialog edit
            hapusAkun(username);
            loadData();
        } else {
            JOptionPane.showMessageDialog(null, "Pilih baris terlebih dahulu.");
        }
    }

            

            
 
    });
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Password", "Role", "Barcode", "Nama"
            }
        ));
        jScrollPane1.setViewportView(tblBarang);

        btnEdit.setText("edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        username.setText("jTextField1");

        password.setText("jTextField1");

        btnHapus.setText("hapus");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(btnHapus)
                .addGap(227, 227, 227)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnHapus))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        String user = username.getText();
        String pass = password.getText();
        
        String sql = "UPDATE id";
    }//GEN-LAST:event_btnEditActionPerformed
private void showEditDialog(String username, String password, String role, String barcode, String nama) {
    JDialog dialog = new JDialog((Frame) null, "Edit Akun", true);
    dialog.setLayout(new GridLayout(6, 2));

    JTextField tfUsername = new JTextField(username);
    JTextField tfPassword = new JTextField(password);
    JTextField tfNama = new JTextField(nama);

    Object[] fields = {
        "Username:", tfUsername,
        "Password:", tfPassword,
        "Nama :",tfNama
    };
int result = JOptionPane.showConfirmDialog(null, fields, "Edit Produk", JOptionPane.OK_CANCEL_OPTION);

    if (result == JOptionPane.OK_OPTION) {
        
        try {
            String namaAkun = tfNama.getText();
            String user = tfUsername.getText();
            String passwordAkun = tfPassword.getText();
            
            simpanEdit(namaAkun,user,passwordAkun);

            
        } catch (Exception e) {
        }
    }
    
    
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try {
    UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatLightLaf());
    } catch (Exception ex) {
        ex.printStackTrace();
    }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new testing().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField password;
    private javax.swing.JTable tblBarang;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
    private void loadData() {
       getData((DefaultTableModel) tblBarang.getModel()); 
    }
    private void setTableModel() {
        DefaultTableModel tabelAkun = (DefaultTableModel) tblBarang.getModel();
       // mengubah header tabel
       JTableHeader header = tblBarang.getTableHeader();
        header.setDefaultRenderer(new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                                                       boolean isSelected, boolean hasFocus, 
                                                       int row, int column) {
            Component comp = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            comp.setBackground(new Color(155,155,155)); // Hijau pastel
            comp.setForeground(Color.GRAY); // Warna teks hitam
            comp.setFont(new Font("Arial", Font.BOLD, 12)); // Gaya font header
            setHorizontalAlignment(CENTER); // Pusatkan teks header
            return comp;
        }
    });
    }
   
private void hapusAkun(String username) {
                int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus akun ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
                String sqlHapus = "DELETE FROM pengguna WHERE id_user = ?";
                if (confirm==JOptionPane.YES_NO_OPTION) {
                    
                    try(PreparedStatement pst = conn.prepareStatement(sqlHapus)) {
                        pst.setString(1, username);
                        
                        pst.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Akun berhasil dihapus");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null,"terjadi kesalahan "+e.getMessage(),"ERROR ",JOptionPane.ERROR_MESSAGE );
                    }
                }
            }
    private void getData(DefaultTableModel tabel) {
        
        tabel.setRowCount(0);
        
        String sqlAkun = "SELECT * FROM pengguna";
        try (PreparedStatement ps = conn.prepareCall(sqlAkun)){
            try(ResultSet rs = ps.executeQuery()) {
                while(rs.next()){
                String username = rs.getString("id_user");
                String pass = rs.getString("password");
                String role = rs.getString("role");
                String rfid = rs.getString("kode_rfid");
                String nama = rs.getString("nama");
                
                    if (rfid==null || rfid.trim().isEmpty()) {
                        rfid = "-";
                    }
                    Object[] row = {username,pass,role,rfid,nama};
                    tabel.addRow(row);
                }
            } 
        } catch (Exception e) {
        }
    }

    private void simpanEdit(String namaAkun, String user, String passwordAkun) {
        String sql = "UPDATE pengguna SET password = ?, nama = ? WHERE id_user = ?";
        
        try(PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setString(1, passwordAkun);
            pst.setString(2, namaAkun);
            pst.setString(3, user);
            
            pst.executeUpdate();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Kesalahan pada system"+e.getMessage(),"ERROR!!!",JOptionPane.ERROR_MESSAGE);
        }
    }
}
